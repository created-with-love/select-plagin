{"version":3,"sources":["select/select.js","index.js"],"names":["getTemplate","data","placeholder","selectedId","text","items","map","item","cls","id","value","join","Select","selector","options","$el","document","querySelector","selctedId","event","type","target","dataset","toggle","select","close","$value","textContent","current","querySelectorAll","forEach","el","classList","remove","add","onSelect","isOpen","open","$arrow","removeEventListener","clickHandler","innerHTML","contains","find","bind","addEventListener","console","log","window","s"],"mappings":"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","file":"select-plagin.5f7c3ff8.js","sourceRoot":"..","sourcesContent":["const getTemplate = (data = [], placeholder, selectedId) => {\r\n  let text = placeholder ?? \"Placeholder по умолчанию\";\r\n\r\n  const items = data.map((item) => {\r\n    let cls = \"\";\r\n    if (item.id === selectedId) {\r\n      text = item.value;\r\n      cls = \"selected\";\r\n    }\r\n    return `\r\n            <li class=\"select__item\" ${cls} data-type=\"item\" data-id=\"${item.id}\">${item.value}</li>\r\n        `;\r\n  });\r\n\r\n  return `\r\n        <div class=\"select__backdrop\" data-type=\"backdrop\"></div>\r\n     <div class=\"select__input\" data-type=\"input\">\r\n            <span data-type=\"value\">${text}</span>\r\n            <i class=\"fa fa-chevron-down\" data-type=\"arrow\"></i>\r\n          </div>\r\n          <div class=\"select__dropdown\">\r\n            <ul class=\"select__list\">\r\n              ${items.join(\"\")}\r\n            </ul>\r\n          </div>\r\n    `;\r\n};\r\n\r\nexport class Select {\r\n  constructor(selector, options) {\r\n    this.$el = document.querySelector(selector);\r\n    this.options = options;\r\n    this.selctedId = options.selectedId;\r\n\r\n    this.#render();\r\n    this.#setup();\r\n  }\r\n\r\n  // # - делает метод приватным, метод доступен только внутри класса Select\r\n  // метод для отрисовки HTML\r\n  #render() {\r\n    const { placeholder, data } = this.options;\r\n    this.$el.classList.add(\"select\");\r\n    this.$el.innerHTML = getTemplate(data, placeholder, this.selectedId);\r\n  }\r\n\r\n  //   метод для настройки динамики дропдауна\r\n  #setup() {\r\n    // что бы контекст у функции не терялся, я его привязал принудительно\r\n    this.clickHandler = this.clickHandler.bind(this);\r\n    this.$el.addEventListener(\"click\", this.clickHandler);\r\n    // нахожу иконку стрелочки\r\n    this.$arrow = this.$el.querySelector('[data-type=\"arrow\"]');\r\n    this.$value = this.$el.querySelector('[data-type=\"value\"]');\r\n  }\r\n\r\n  clickHandler(event) {\r\n    const { type } = event.target.dataset;\r\n\r\n    if (type === \"input\") {\r\n      this.toggle();\r\n    } else if (type === \"item\") {\r\n      const id = event.target.dataset.id;\r\n      this.select(id);\r\n    } else if (type === \"backdrop\") {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  // геттер для проверки открыт ли дропдаун\r\n  get isOpen() {\r\n    return this.$el.classList.contains(\"open\");\r\n  }\r\n\r\n  // возвращает актуальный выбраный элемент листа\r\n  get current() {\r\n    return this.options.data.find((item) => item.id === this.selctedId);\r\n  }\r\n\r\n  select(id) {\r\n    this.selctedId = id;\r\n    this.$value.textContent = this.current.value;\r\n\r\n    this.$el.querySelectorAll('[data-type=\"item\"]').forEach((el) => {\r\n      el.classList.remove(\"selected\");\r\n    });\r\n    this.$el.querySelector(`[data-id=\"${id}\"]`).classList.add(\"selected\");\r\n\r\n    this.options.onSelect ? this.options.onSelect(this.current) : null;\r\n    this.close();\r\n  }\r\n\r\n  // красивый переключатель. Если дропдаун открыт - закрывает и наоборот\r\n  toggle() {\r\n    this.isOpen ? this.close() : this.open();\r\n  }\r\n\r\n  open() {\r\n    this.$el.classList.add(\"open\");\r\n    this.$arrow.classList.remove(\"fa-chevron-down\");\r\n    this.$arrow.classList.add(\"fa-chevron-up\");\r\n  }\r\n  close() {\r\n    this.$el.classList.remove(\"open\");\r\n    this.$arrow.classList.add(\"fa-chevron-down\");\r\n    this.$arrow.classList.remove(\"fa-chevron-up\");\r\n  }\r\n\r\n  destroy() {\r\n    this.$el.removeEventListener(\"click\", this.clickHandler);\r\n    this.$el.innerHTML = \"\";\r\n  }\r\n}\r\n","import { Select } from \"./select/select.js\";\r\nimport \"./select/styles.scss\";\r\n\r\nconst select = new Select(\"#select\", {\r\n  placeholder: \"Выбери, пожалуйста, элемент\",\r\n  // элемент выбранный по умолчанию\r\n  selectedId: \"4\",\r\n  data: [\r\n    { id: \"1\", value: \"React\" },\r\n    { id: \"2\", value: \"Angular\" },\r\n    { id: \"3\", value: \"Vue\" },\r\n    { id: \"4\", value: \"React Native\" },\r\n    { id: \"5\", value: \"Next\" },\r\n    { id: \"6\", value: \"Nest\" },\r\n  ],\r\n  onSelect(item) {\r\n    console.log(\"selected item\", item);\r\n  },\r\n});\r\n\r\nwindow.s = select;\r\n"]}